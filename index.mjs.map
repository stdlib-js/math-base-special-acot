{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar atan = require( '@stdlib/math-base-special-atan' );\n\n\n// MAIN //\n\n/**\n* Computes the inverse cotangent of a number.\n*\n* @param {number} x - input value\n* @returns {number} inverse cotangent (in radians)\n*\n* @example\n* var v = acot( 2.0 );\n* // returns ~0.4636\n*\n* @example\n* var v = acot( 0.0 );\n* // returns ~1.5708\n*\n* @example\n* var v = acot( 0.5 );\n* // returns ~1.1071\n*\n* @example\n* var v = acot( 1.0 );\n* // returns ~0.7854\n*\n* @example\n* var v = acot( NaN );\n* // returns NaN\n*\n* @example\n* var v = acot( Infinity );\n* // returns 0.0\n*/\nfunction acot( x ) {\n\treturn atan( 1.0 / x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = acot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse cotangent of a number.\n*\n* @module @stdlib/math-base-special-acot\n*\n* @example\n* var acot = require( '@stdlib/math-base-special-acot' );\n*\n* var v = acot( 2.0 );\n* // returns ~0.4636\n*\n* v = acot( 0.0 );\n* // returns ~1.5708\n*\n* v = acot( 0.5 );\n* // returns ~1.1071\n*\n* v = acot( 1.0 );\n* // returns ~0.7854\n*\n* v = acot( NaN );\n* // returns NaN\n*\n* v = acot( Infinity );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar acot = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = acot;\n"],"names":["atan","require$$0","lib","x"],"mappings":";;0FAsBA,IAAIA,EAAOC,EA0CX,ICVAC,EDGA,SAAeC,GACd,OAAOH,EAAM,EAAMG"}